"use strict";(self.webpackChunkforge_samples_docs=self.webpackChunkforge_samples_docs||[]).push([[759],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return h}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),h=o,m=d["".concat(l,".").concat(h)]||d[h]||p[h]||s;return t?r.createElement(m,a(a({ref:n},c),{},{components:t})):r.createElement(m,a({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8843:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(7294),o=t(3117),s=t(2389),a=t(742),i=t(6010),l="tabItem_LplD";function u(e){var n,t,s,u=e.lazy,c=e.block,p=e.defaultValue,d=e.values,h=e.groupId,m=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=d?d:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),b=(0,a.lx)(f,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===p?p:null!=(n=null!=p?p:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(s=g[0])?void 0:s.props.value;if(null!==v&&!f.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=(0,a.UB)(),w=k.tabGroupChoices,y=k.setTabGroupChoices,C=(0,r.useState)(v),j=C[0],T=C[1],N=[],_=(0,a.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var I=w[h];null!=I&&I!==j&&f.some((function(e){return e.value===I}))&&T(I)}var A=function(e){var n=e.currentTarget,t=N.indexOf(n),r=f[t].value;r!==j&&(_(n),T(r),null!=h&&y(h,r))},E=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.currentTarget)+1;t=N[r]||N[0];break;case"ArrowLeft":var o=N.indexOf(e.currentTarget)-1;t=N[o]||N[N.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},m)},f.map((function(e){var n=e.value,t=e.label,s=e.attributes;return r.createElement("li",(0,o.Z)({role:"tab",tabIndex:j===n?0:-1,"aria-selected":j===n,key:n,ref:function(e){return N.push(e)},onKeyDown:E,onFocus:A,onClick:A},s,{className:(0,i.Z)("tabs__item",l,null==s?void 0:s.className,{"tabs__item--active":j===n})}),null!=t?t:n)}))),u?(0,r.cloneElement)(g.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}function c(e){var n=(0,s.Z)();return r.createElement(u,(0,o.Z)({key:String(n)},e))}function p(e){var n=e.children,t=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}function d(e){var n=e.NodeJsVsCode,t=e.DotNetVsCode,o=e.DotNetVs2022;return r.createElement(c,{groupId:"development-environment"},r.createElement(p,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},r.createElement(n,null)),r.createElement(p,{value:"dotnet-vscode",label:".NET 6 & VSCode"},r.createElement(t,null)),r.createElement(p,{value:"dotnet-vs2022",label:".NET 6 & VS2022"},r.createElement(o,null)))}},9829:function(e,n,t){t.r(n),t.d(n,{assets:function(){return j},contentTitle:function(){return y},default:function(){return _},frontMatter:function(){return w},metadata:function(){return C},toc:function(){return T}});var r=t(3117),o=t(102),s=(t(7294),t(3905)),a=t(8843),i=["components"],l={toc:[]};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Update the ",(0,s.kt)("inlineCode",{parentName:"p"},"services/forge.js")," file with the following code:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/forge.js"',title:'"services/forge.js"'},"// highlight-start\nconst { AuthClientThreeLegged, UserProfileApi, HubsApi, ProjectsApi, FoldersApi, ItemsApi } = require('forge-apis');\n// highlight-end\nconst { FORGE_CLIENT_ID, FORGE_CLIENT_SECRET, FORGE_CALLBACK_URL, INTERNAL_TOKEN_SCOPES, PUBLIC_TOKEN_SCOPES } = require('../config.js');\n\nconst internalAuthClient = new AuthClientThreeLegged(FORGE_CLIENT_ID, FORGE_CLIENT_SECRET, FORGE_CALLBACK_URL, INTERNAL_TOKEN_SCOPES);\nconst publicAuthClient = new AuthClientThreeLegged(FORGE_CLIENT_ID, FORGE_CLIENT_SECRET, FORGE_CALLBACK_URL, PUBLIC_TOKEN_SCOPES);\n\nfunction getAuthorizationUrl() {\n    return internalAuthClient.generateAuthUrl();\n}\n\nasync function authCallbackMiddleware(req, res, next) {\n    const internalCredentials = await internalAuthClient.getToken(req.query.code);\n    const publicCredentials = await publicAuthClient.refreshToken(internalCredentials);\n    req.session.public_token = publicCredentials.access_token;\n    req.session.internal_token = internalCredentials.access_token;\n    req.session.refresh_token = publicCredentials.refresh_token;\n    req.session.expires_at = Date.now() + internalCredentials.expires_in * 1000;\n    next();\n}\n\nasync function authRefreshMiddleware(req, res, next) {\n    const { refresh_token, expires_at } = req.session;\n    if (!refresh_token) {\n        res.status(401).end();\n        return;\n    }\n\n    if (expires_at < Date.now()) {\n        const internalCredentials = await internalAuthClient.refreshToken({ refresh_token });\n        const publicCredentials = await publicAuthClient.refreshToken(internalCredentials);\n        req.session.public_token = publicCredentials.access_token;\n        req.session.internal_token = internalCredentials.access_token;\n        req.session.refresh_token = publicCredentials.refresh_token;\n        req.session.expires_at = Date.now() + internalCredentials.expires_in * 1000;\n    }\n    req.internalOAuthToken = {\n        access_token: req.session.internal_token,\n        expires_in: Math.round((req.session.expires_at - Date.now()) / 1000)\n    };\n    req.publicOAuthToken = {\n        access_token: req.session.public_token,\n        expires_in: Math.round((req.session.expires_at - Date.now()) / 1000)\n    };\n    next();\n}\n\nasync function getUserProfile(token) {\n    const resp = await new UserProfileApi().getUserProfile(internalAuthClient, token);\n    return resp.body;\n}\n\n// highlight-start\nasync function getHubs(token) {\n    const resp = await new HubsApi().getHubs(null, internalAuthClient, token);\n    return resp.body.data;\n}\n\nasync function getProjects(hubId, token) {\n    const resp = await new ProjectsApi().getHubProjects(hubId, null, internalAuthClient, token);\n    return resp.body.data;\n}\n\nasync function getProjectContents(hubId, projectId, folderId, token) {\n    if (!folderId) {\n        const resp = await new ProjectsApi().getProjectTopFolders(hubId, projectId, internalAuthClient, token);\n        return resp.body.data;\n    } else {\n        const resp = await new FoldersApi().getFolderContents(projectId, folderId, null, internalAuthClient, token);\n        return resp.body.data;\n    }\n}\n\nasync function getItemVersions(projectId, itemId, token) {\n    const resp = await new ItemsApi().getItemVersions(projectId, itemId, null, internalAuthClient, token);\n    return resp.body.data;\n}\n// highlight-end\n\nmodule.exports = {\n    getAuthorizationUrl,\n    authCallbackMiddleware,\n    authRefreshMiddleware,\n    getUserProfile,\n    // highlight-start\n    getHubs,\n    getProjects,\n    getProjectContents,\n    getItemVersions\n    // highlight-end\n};\n")))}u.isMDXComponent=!0;var c=["components"],p={toc:[]};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,s.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Create a ",(0,s.kt)("inlineCode",{parentName:"p"},"hubs.js")," file under the ",(0,s.kt)("inlineCode",{parentName:"p"},"routes")," subfolder with the following content:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/hubs.js"',title:'"routes/hubs.js"'},"const express = require('express');\nconst { authRefreshMiddleware, getHubs, getProjects, getProjectContents, getItemVersions } = require('../services/forge.js');\n\nlet router = express.Router();\n\nrouter.use(authRefreshMiddleware);\n\nrouter.get('/', async function (req, res, next) {\n    try {\n        const hubs = await getHubs(req.internalOAuthToken);\n        res.json(hubs);\n    } catch (err) {\n        next(err);\n    }\n});\n\nrouter.get('/:hub_id/projects', async function (req, res, next) {\n    try {\n        const projects = await getProjects(req.params.hub_id, req.internalOAuthToken);\n        res.json(projects);\n    } catch (err) {\n        next(err);\n    }\n});\n\nrouter.get('/:hub_id/projects/:project_id/contents', async function (req, res, next) {\n    try {\n        const contents = await getProjectContents(req.params.hub_id, req.params.project_id, req.query.folder_id, req.internalOAuthToken);\n        res.json(contents);\n    } catch (err) {\n        next(err);\n    }\n});\n\nrouter.get('/:hub_id/projects/:project_id/contents/:item_id/versions', async function (req, res, next) {\n    try {\n        const versions = await getItemVersions(req.params.project_id, req.params.item_id, req.internalOAuthToken);\n        res.json(versions);\n    } catch (err) {\n        next(err);\n    }\n});\n\nmodule.exports = router;\n")),(0,s.kt)("p",null,"And mount the router to our server application by modifying ",(0,s.kt)("inlineCode",{parentName:"p"},"server.js"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst session = require('cookie-session')\nconst { PORT, SERVER_SESSION_SECRET } = require('./config.js');\n\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(session({ secret: SERVER_SESSION_SECRET, maxAge: 24 * 60 * 60 * 1000 }));\napp.use('/api/auth', require('./routes/auth.js'));\n// highlight-start\napp.use('/api/hubs', require('./routes/hubs.js'));\n// highlight-end\napp.listen(PORT, () => console.log(`Server listening on port ${PORT}...`));\n")))}d.isMDXComponent=!0;var h=["components"],m={toc:[]};function g(e){var n=e.components,t=(0,o.Z)(e,h);return(0,s.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Create a ",(0,s.kt)("inlineCode",{parentName:"p"},"ForgeService.Hubs.cs")," under the ",(0,s.kt)("inlineCode",{parentName:"p"},"Models")," subfolder with the following content:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/ForgeService.Hubs.cs"',title:'"Models/ForgeService.Hubs.cs"'},"using System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Autodesk.Forge;\nusing Autodesk.Forge.Model;\n\npublic partial class ForgeService\n{\n    public async Task<IEnumerable<dynamic>> GetHubs(Tokens tokens)\n    {\n        var hubs = new List<dynamic>();\n        var api = new HubsApi();\n        api.Configuration.AccessToken = tokens.InternalToken;\n        var response = await api.GetHubsAsync();\n        foreach (KeyValuePair<string, dynamic> hub in new DynamicDictionaryItems(response.data))\n        {\n            hubs.Add(hub.Value);\n        }\n        return hubs;\n    }\n\n    public async Task<IEnumerable<dynamic>> GetProjects(string hubId, Tokens tokens)\n    {\n        var projects = new List<dynamic>();\n        var api = new ProjectsApi();\n        api.Configuration.AccessToken = tokens.InternalToken;\n        var response = await api.GetHubProjectsAsync(hubId);\n        foreach (KeyValuePair<string, dynamic> project in new DynamicDictionaryItems(response.data))\n        {\n            projects.Add(project.Value);\n        }\n        return projects;\n    }\n\n    public async Task<IEnumerable<dynamic>> GetContents(string hubId, string projectId, string folderId, Tokens tokens)\n    {\n        var contents = new List<dynamic>();\n        if (string.IsNullOrEmpty(folderId))\n        {\n            var api = new ProjectsApi();\n            api.Configuration.AccessToken = tokens.InternalToken;\n            var response = await api.GetProjectTopFoldersAsync(hubId, projectId);\n            foreach (KeyValuePair<string, dynamic> folders in new DynamicDictionaryItems(response.data))\n            {\n                contents.Add(folders.Value);\n            }\n        }\n        else\n        {\n            var api = new FoldersApi();\n            api.Configuration.AccessToken = tokens.InternalToken;\n            var response = await api.GetFolderContentsAsync(projectId, folderId); // TODO: add paging\n            foreach (KeyValuePair<string, dynamic> item in new DynamicDictionaryItems(response.data))\n            {\n                contents.Add(item.Value);\n            }\n        }\n        return contents;\n    }\n\n    public async Task<IEnumerable<dynamic>> GetVersions(string hubId, string projectId, string itemId, Tokens tokens)\n    {\n        var versions = new List<dynamic>();\n        var api = new ItemsApi();\n        api.Configuration.AccessToken = tokens.InternalToken;\n        var response = await api.GetItemVersionsAsync(projectId, itemId);\n        foreach (KeyValuePair<string, dynamic> version in new DynamicDictionaryItems(response.data))\n        {\n            versions.Add(version.Value);\n        }\n        return versions;\n    }\n}\n")))}g.isMDXComponent=!0;var f=["components"],b={toc:[]};function v(e){var n=e.components,t=(0,o.Z)(e,f);return(0,s.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Create a ",(0,s.kt)("inlineCode",{parentName:"p"},"HubsController.cs")," file under the ",(0,s.kt)("inlineCode",{parentName:"p"},"Controllers")," subfolder with the following content:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Controllers/HubsController.cs"',title:'"Controllers/HubsController.cs"'},'using System.Threading.Tasks;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Logging;\nusing Newtonsoft.Json;\n\n[ApiController]\n[Route("api/[controller]")]\npublic class HubsController : ControllerBase\n{\n    private readonly ILogger<HubsController> _logger;\n    private readonly ForgeService _forgeService;\n\n    public HubsController(ILogger<HubsController> logger, ForgeService forgeService)\n    {\n        _logger = logger;\n        _forgeService = forgeService;\n    }\n\n    [HttpGet()]\n    public async Task<ActionResult<string>> ListHubs()\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _forgeService);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var hubs = await _forgeService.GetHubs(tokens);\n        return JsonConvert.SerializeObject(hubs);\n    }\n\n    [HttpGet("{hub}/projects")]\n    public async Task<ActionResult<string>> ListProjects(string hub)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _forgeService);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var projects = await _forgeService.GetProjects(hub, tokens);\n        return JsonConvert.SerializeObject(projects);\n    }\n\n    [HttpGet("{hub}/projects/{project}/contents")]\n    public async Task<ActionResult<string>> ListItems(string hub, string project, [FromQuery] string? folder_id)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _forgeService);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var contents = await _forgeService.GetContents(hub, project, folder_id, tokens);\n        return JsonConvert.SerializeObject(contents);\n    }\n\n    [HttpGet("{hub}/projects/{project}/contents/{item}/versions")]\n    public async Task<ActionResult<string>> ListVersions(string hub, string project, string item)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _forgeService);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var versions = await _forgeService.GetVersions(hub, project, item, tokens);\n        return JsonConvert.SerializeObject(versions);\n    }\n}\n')),(0,s.kt)("p",null,"The controller handles several endpoints for browsing the content in 3rd party Forge\napplications such as BIM 360 Docs and ACC. We will make use of these endpoints when\nbuilding the UI part of the application."))}v.isMDXComponent=!0;var k=["components"],w={},y="Data Browsing",C={unversionedId:"tutorials/hubs-browser/data",id:"tutorials/hubs-browser/data",title:"Data Browsing",description:"In this step we'll extend our server so that we can browse the content of 3rd party",source:"@site/docs/tutorials/02-hubs-browser/03-data.mdx",sourceDirName:"tutorials/02-hubs-browser",slug:"/tutorials/hubs-browser/data",permalink:"/forge-samples-docs/docs/tutorials/hubs-browser/data",editUrl:"https://github.com/petrbroz/forge-samples-docs/edit/master/docs/tutorials/02-hubs-browser/03-data.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/forge-samples-docs/docs/tutorials/hubs-browser/auth"},next:{title:"Viewer & UI",permalink:"/forge-samples-docs/docs/tutorials/hubs-browser/viewer"}},j={},T=[{value:"Browsing hubs",id:"browsing-hubs",level:2},{value:"Server endpoints",id:"server-endpoints",level:2},{value:"Try it out",id:"try-it-out",level:2}],N={toc:T};function _(e){var n=e.components,i=(0,o.Z)(e,k);return(0,s.kt)("wrapper",(0,r.Z)({},N,i,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"data-browsing"},"Data Browsing"),(0,s.kt)("p",null,"In this step we'll extend our server so that we can browse the content of 3rd party\napplications built with Forge such as BIM 360 Docs or Autodesk Docs. We will basically\nfollow the Data Management service's hierarchy of hubs, projects, folders, items, and versions:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Data Management structure",src:t(2973).Z,width:"1399",height:"864"})),(0,s.kt)("h2",{id:"browsing-hubs"},"Browsing hubs"),(0,s.kt)("p",null,"First, let's add a couple of helper methods for browsing through the hubs, projects,\nfolders, items, and versions:"),(0,s.kt)(a.Z,{NodeJsVsCode:u,DotNetVsCode:g,DotNetVs2022:g,mdxType:"EnvTabs"}),(0,s.kt)("h2",{id:"server-endpoints"},"Server endpoints"),(0,s.kt)("p",null,"Next, let's expose the new functionality to the client-side code through another\nset of endpoints."),(0,s.kt)(a.Z,{NodeJsVsCode:d,DotNetVsCode:v,DotNetVs2022:v,mdxType:"EnvTabs"}),(0,s.kt)("h2",{id:"try-it-out"},"Try it out"),(0,s.kt)("p",null,"And that's it for the server side. Time to try it out!"),(0,s.kt)("p",null,"Start (or restart) the app from Visual Studio Code as usual, and navigate to\n",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080/api/hubs"},"http://localhost:8080/api/hubs")," in the browser.\nThe server should respond with a JSON list of all the hubs you have access to.\nTry copying the ID of one of the hubs, and use it in another address: http://localhost:8080/api/hubs/your-hub-id/projects.\nIn this case the server application should respond with a JSON list of all projects\navailable under the specified hub."),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If you skipped the login procedure in the previous step, or restarted your server application,\nyou may need to go to ",(0,s.kt)("a",{parentName:"p",href:"http://localhost:8080/api/auth/login"},"http://localhost:8080/api/auth/login"),"\nagain to make sure that all the authentication data is available in cookies before testing\nthe ",(0,s.kt)("inlineCode",{parentName:"p"},"/api/hubs")," endpoint."))),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If you are using Google Chrome, consider installing ",(0,s.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en"},"JSON Formatter"),"\nor a similar extension to automatically format JSON responses."))),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Hubs Response",src:t(592).Z,width:"1500",height:"929"})))}_.isMDXComponent=!0},2973:function(e,n,t){n.Z=t.p+"assets/images/dm-structure-b5f87fcf63e09968a2997e1df1c9d095.webp"},592:function(e,n,t){n.Z=t.p+"assets/images/hubs-response-6ca89cc77b1e67f6197c74b8561d0115.webp"}}]);